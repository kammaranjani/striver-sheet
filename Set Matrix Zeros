Bruteforce:
void markrowcolumn(vector<vector<int>> &matrix, int i, int j, int n, int m){
	for(int k=0;k<m;k++){
          if (matrix[i][k] != 0) {
            matrix[i][k] = -1;
          }
        }
	for(int k=0;k<n;k++){
          if (matrix[k][j] != 0) {
            matrix[k][j] = -1;
          }
        }
}
#include <bits/stdc++.h> 
vector<vector<int>> zeroMatrix(vector<vector<int>> &matrix, int n, int m) {
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(matrix[i][j]==0){
            markrowcolumn(matrix,i,j,n,m);
			}
		}
	}
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(matrix[i][j]==-1){
            matrix[i][j] = 0;
			}
		}
	}
	return matrix;
}
Better:
#include <bits/stdc++.h> 
vector<vector<int>> zeroMatrix(vector<vector<int>> &matrix, int n, int m) {
	vector<int> col(m),row(n);
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(matrix[i][j]==0){
				row[i]=1;
				col[j]=1;
			}
		}
	}
		for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(row[i]||col[j]){
				matrix[i][j]=0;
			}
		}
		}
	return matrix;
}
Best:
#include <bits/stdc++.h> 
vector<vector<int>> zeroMatrix(vector<vector<int>> &matrix, int n, int m) {
    int colv= 1;
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(matrix[i][j]==0){
				matrix[i][0]=0;
                if (j != 0) {
                  matrix[0][j] = 0;
                }
								else {
									colv = 0;
								}
                        }
		}
	} 
		for(int i=1;i<n;i++){
		for(int j=1;j<m;j++){
			if(matrix[i][0]==0||matrix[0][j]==0){
				if(matrix[i][j]!=0){
				matrix[i][j]=0;
				}
			}
		}
		}
    for (int i = 1; i < m; i++) {
      if (matrix[0][0] == 0) {
        matrix[0][i] = matrix[0][0];
      }
      }
    for(int i=0;i<n;i++){ ̰
      if (colv == 0) {
        matrix[i][0] = colv;
       }
       }
     return matrix;
}
